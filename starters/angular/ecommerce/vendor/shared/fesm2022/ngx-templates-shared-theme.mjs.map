{"version":3,"file":"ngx-templates-shared-theme.mjs","sources":["../../../projects/shared/theme/src/theme.service.ts","../../../projects/shared/theme/src/theme-switch/theme-label.pipe.ts","../../../projects/shared/theme/src/theme-switch/theme-switch.component.ts","../../../projects/shared/theme/src/theme-switch/theme-switch.component.html","../../../projects/shared/theme/public-api.ts","../../../projects/shared/theme/ngx-templates-shared-theme.ts"],"sourcesContent":["import { DOCUMENT } from '@angular/common';\nimport {\n  Injectable,\n  Renderer2,\n  RendererFactory2,\n  Signal,\n  inject,\n  signal,\n} from '@angular/core';\nimport { LocalStorage } from '@ngx-templates/shared/services';\n\nconst THEME_LS_KEY = 'ngx-theme';\ntype LsThemeType = 'light' | 'dark';\nexport type ThemeType = LsThemeType | 'system';\n\nconst getThemeClass = (t: ThemeType) => `ngx-${t}-theme`;\n\n/**\n * Provides an API for changing the UI theme\n * The initialization logic can be found in index.html\n */\n@Injectable({ providedIn: 'root' })\nexport class ThemeService {\n  private _doc = inject(DOCUMENT);\n  private _storage = inject(LocalStorage);\n\n  private _renderer: Renderer2;\n  private _current = signal<ThemeType | null>(null);\n\n  constructor(rendererFactory: RendererFactory2) {\n    this._renderer = rendererFactory.createRenderer(null, null);\n  }\n\n  /**\n   * Returns a read-only Signal with the current theme.\n   *\n   * @returns\n   */\n  getTheme(): Signal<ThemeType> {\n    this._initSignal();\n    return this._current.asReadonly() as Signal<ThemeType>;\n  }\n\n  /**\n   * Change current theme to light, dark or system one\n   *\n   * @param theme\n   */\n  setTheme(theme: ThemeType) {\n    this._initSignal();\n\n    const doc = this._doc.documentElement;\n\n    if (this._current() !== 'system') {\n      this._renderer.removeClass(doc, getThemeClass(this._current()!));\n      this._storage.remove(THEME_LS_KEY);\n    }\n    if (theme !== 'system') {\n      this._renderer.addClass(doc, getThemeClass(theme));\n      this._storage.set(THEME_LS_KEY, theme);\n    }\n\n    this._current.set(theme);\n  }\n\n  /**\n   * Initialize the current theme signal from the local storage, if null.\n   */\n  private _initSignal() {\n    if (!this._current()) {\n      const current = this._storage.get(THEME_LS_KEY) as LsThemeType | null;\n      this._current.set(current ? current : 'system');\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { ThemeType } from '../theme.service';\n\nconst THEME_TO_LABEL: { [key in ThemeType]: string } = {\n  ['system']: 'System',\n  ['light']: 'Light',\n  ['dark']: 'Dark',\n};\n\n@Pipe({\n  name: 'themeLabel',\n})\nexport class ThemeLabelPipe implements PipeTransform {\n  transform(value: ThemeType) {\n    return THEME_TO_LABEL[value];\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  input,\n} from '@angular/core';\nimport { IconComponent, IconName } from '@ngx-templates/shared/icon';\nimport { ThemeService, ThemeType } from '../theme.service';\nimport { ThemeLabelPipe } from './theme-label.pipe';\n\nconst THEME_SEQ: ThemeType[] = ['system', 'light', 'dark'];\n\nconst THEME_TO_ICON: { [key in ThemeType]: IconName } = {\n  ['system']: 'Routine',\n  ['light']: 'LightMode',\n  ['dark']: 'DarkMode',\n};\n\n@Component({\n  selector: 'ngx-theme-switch',\n  imports: [IconComponent, ThemeLabelPipe],\n  templateUrl: './theme-switch.component.html',\n  styleUrl: './theme-switch.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ThemeSwitchComponent {\n  private _theme = inject(ThemeService);\n\n  currentTheme = this._theme.getTheme();\n  iconOnly = input<boolean>(false);\n\n  THEME_TO_ICON = THEME_TO_ICON;\n\n  onThemeSwitch() {\n    const currentIdx = THEME_SEQ.findIndex((t) => t === this.currentTheme());\n    const newIdx = (currentIdx + 1) % THEME_SEQ.length;\n\n    this._theme.setTheme(THEME_SEQ[newIdx]);\n  }\n}\n","<button\n  (click)=\"onThemeSwitch()\"\n  [title]=\"\n    !iconOnly() ? 'Change the current theme' : (currentTheme() | themeLabel)\n  \"\n>\n  @if (!iconOnly()) {\n    <span>{{ currentTheme() | themeLabel }}</span>\n  }\n  <ngx-icon [name]=\"THEME_TO_ICON[currentTheme()]\" size=\"xlg\" />\n</button>\n","import { ThemeSwitchComponent } from './src/theme-switch/theme-switch.component';\n\nexport { ThemeSwitchComponent } from './src/theme-switch/theme-switch.component';\nexport { ThemeService } from './src/theme.service';\n\nexport const THEME_COMPONENTS = [ThemeSwitchComponent] as const;\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}