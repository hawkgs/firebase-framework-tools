{"version":3,"file":"ngx-templates-shared-select.mjs","sources":["../../../projects/shared/select/src/select-option/select-option.component.ts","../../../projects/shared/select/src/select-option/select-option.component.html","../../../projects/shared/select/src/select/select.component.ts","../../../projects/shared/select/src/select/select.component.html","../../../projects/shared/select/public-api.ts","../../../projects/shared/select/ngx-templates-shared-select.ts"],"sourcesContent":["import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  input,\n  output,\n  signal,\n  viewChild,\n} from '@angular/core';\n\n@Component({\n  selector: 'ngx-select-option',\n  imports: [],\n  templateUrl: './select-option.component.html',\n  styleUrl: './select-option.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectOptionComponent implements AfterContentInit {\n  button = viewChild.required<ElementRef>('btn');\n  value = input.required<string>();\n  optionSelect = output<string>();\n\n  presentationText = signal<string>('');\n\n  ngAfterContentInit() {\n    this._extractPresentationText();\n  }\n\n  onSelect(e: Event) {\n    e.stopPropagation();\n\n    this.optionSelect.emit(this.value());\n  }\n\n  // Note(Georgi): A rather unorthodox way to obtain the presentation text\n  private _extractPresentationText() {\n    const btnEl = this.button().nativeElement;\n    this.presentationText.set(btnEl.innerText);\n  }\n}\n","<button\n  #btn\n  (click)=\"onSelect($event)\"\n  [title]=\"'Select option: ' + presentationText()\"\n>\n  <ng-content />\n</button>\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  contentChildren,\n  HostListener,\n  inject,\n  input,\n  model,\n  signal,\n} from '@angular/core';\nimport { IconComponent } from '@ngx-templates/shared/icon';\nimport { Map } from 'immutable';\n\nimport { SelectOptionComponent } from '../select-option/select-option.component';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'ngx-select',\n  imports: [IconComponent],\n  templateUrl: './select.component.html',\n  styleUrl: './select.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectComponent implements AfterContentInit {\n  private _doc = inject(DOCUMENT);\n\n  options = contentChildren(SelectOptionComponent);\n\n  title = input<string>();\n  disabled = input<boolean>();\n  placeholder = input<string>('');\n  showOptions = signal<boolean>(false);\n  selected = model<string | null>(null);\n  presentationTexts = signal<Map<string, string>>(Map());\n\n  ngAfterContentInit() {\n    const valueDuplicates = new Set<string>();\n\n    for (const opt of this.options()) {\n      const value = opt.value();\n\n      // Duplicates check\n      if (valueDuplicates.has(value)) {\n        throw new Error(\n          `SelectComponent (ngx-select) detected two ngx-select-option instances with the same \"${value}\" value`,\n        );\n      }\n      valueDuplicates.add(value);\n\n      this.presentationTexts.update((m) =>\n        m.set(opt.value(), opt.presentationText()),\n      );\n\n      // Subscribe to the click/select events.\n      // They are automatically disposed when\n      // the components are destroyed.\n      opt.optionSelect.subscribe((value) => {\n        this.selected.set(value);\n        this.showOptions.set(false);\n      });\n    }\n  }\n\n  toggleOptions(e: Event) {\n    if (this.disabled()) {\n      return;\n    }\n\n    e.stopPropagation();\n    this.showOptions.update((v) => !v);\n  }\n\n  @HostListener('document:click')\n  onDocumentClick() {\n    this.showOptions.set(false);\n  }\n\n  @HostListener('document:keydown', ['$event'])\n  onDocumentKeydown(e: KeyboardEvent) {\n    if (this.showOptions() && ['ArrowUp', 'ArrowDown'].includes(e.key)) {\n      e.preventDefault();\n\n      const options = this.options();\n      const focusedIdx = options.findIndex(\n        (cmp) => cmp.button().nativeElement === this._doc.activeElement,\n      );\n\n      let newIdx = focusedIdx + (e.key === 'ArrowDown' ? 1 : -1);\n      newIdx = newIdx >= 0 ? newIdx % options.length : options.length - 1;\n\n      options[newIdx].button().nativeElement.focus();\n    }\n  }\n}\n","<button\n  class=\"ngx-input-element\"\n  [class.expanded]=\"showOptions()\"\n  [class.disabled]=\"disabled()\"\n  (click)=\"toggleOptions($event)\"\n  [title]=\"\n    title() ? title() : (showOptions() ? 'Collapse' : 'Expand') + ' select'\n  \"\n>\n  <span>\n    @if (selected(); as selected) {\n      {{ presentationTexts().get(selected) }}\n    } @else {\n      {{ placeholder() || 'Select an option' }}\n    }\n  </span>\n  <ngx-icon name=\"ChevronRight\" />\n</button>\n@if (showOptions()) {\n  <div class=\"options\">\n    <ng-content />\n  </div>\n}\n","import { SelectOptionComponent } from './public-api';\nimport { SelectComponent } from './public-api';\n\nexport { SelectComponent } from './src/select/select.component';\nexport { SelectOptionComponent } from './src/select-option/select-option.component';\n\nexport const SELECT_COMPONENTS = [\n  SelectComponent,\n  SelectOptionComponent,\n] as const;\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}