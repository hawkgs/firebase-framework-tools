{"version":3,"file":"ngx-templates-shared-infinite-scroll.mjs","sources":["../../../projects/shared/infinite-scroll/src/infinite-scroll.component.ts","../../../projects/shared/infinite-scroll/src/infinite-scroll.component.html","../../../projects/shared/infinite-scroll/ngx-templates-shared-infinite-scroll.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  PLATFORM_ID,\n  Renderer2,\n  inject,\n  input,\n  output,\n} from '@angular/core';\nimport { WINDOW } from '@ngx-templates/shared/services';\nimport { IconComponent } from '@ngx-templates/shared/icon';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\n\n// This is a scroll offset value that\n// takes into account the relative size\n// of the footer.\nconst SCROLL_OFFSET = 320;\n\nexport type CompleteFn = () => void;\n\n@Component({\n  selector: 'ngx-infinite-scroll',\n  imports: [IconComponent],\n  templateUrl: './infinite-scroll.component.html',\n  styleUrl: './infinite-scroll.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InfiniteScrollComponent implements OnInit, OnDestroy {\n  private _win = inject(WINDOW);\n  private _doc = inject(DOCUMENT);\n  private _platformId = inject(PLATFORM_ID);\n  private _renderer = inject(Renderer2);\n  private _zone = inject(NgZone);\n\n  private _endReached = false;\n  private _listeners: (() => void)[] = [];\n\n  /**\n   * Provide a custom scroll container.\n   *\n   * Default: `window`\n   */\n  scrollCont = input<HTMLElement | null>(null);\n\n  /**\n   * Emitted when the end of the container is reached.\n   *\n   * @event CompleteFn â€“ Should be called when the data is loaded.\n   */\n  loadNext = output<CompleteFn>();\n\n  ngOnInit() {\n    this._addEventListeners();\n  }\n\n  ngOnDestroy() {\n    for (const l of this._listeners) {\n      l();\n    }\n  }\n\n  onLoadNext() {\n    this._endReached = true;\n\n    this.loadNext.emit(() => {\n      this._endReached = false;\n    });\n  }\n\n  private _addEventListeners() {\n    if (!isPlatformBrowser(this._platformId)) {\n      return;\n    }\n\n    this._zone.runOutsideAngular(() => {\n      const scrollCont = this.scrollCont();\n      let listener: () => void;\n\n      const endReached = (scrollHeight: number, scrolledY: number) => {\n        if (!this._endReached && SCROLL_OFFSET >= scrollHeight - scrolledY) {\n          this._zone.run(() => this.onLoadNext());\n        }\n      };\n\n      if (!scrollCont) {\n        listener = this._renderer.listen(this._win, 'scroll', () => {\n          const scrolledY = this._win.scrollY + this._win.innerHeight;\n          const scrollHeight = this._doc.body.scrollHeight;\n          endReached(scrollHeight, scrolledY);\n        });\n      } else {\n        const el = scrollCont;\n        listener = this._renderer.listen(el, 'scroll', () => {\n          // Since the scroll could be inverted, we are using the absolute value.\n          const scrolledY = el.clientHeight + Math.abs(el.scrollTop);\n          endReached(el.scrollHeight, scrolledY);\n        });\n      }\n\n      this._listeners.push(listener);\n    });\n  }\n}\n","<button\n  class=\"fallback-btn\"\n  (click)=\"onLoadNext()\"\n  aria-label=\"Load more products\"\n>\n  <ngx-icon size=\"lg\" name=\"Downloading\" />\n  <span>Load More</span>\n</button>\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}