{"version":3,"file":"ngx-templates-shared-modal.mjs","sources":["../../../projects/shared/modal/src/modal.controller.ts","../../../projects/shared/modal/src/modal.service.ts","../../../projects/shared/modal/src/modal/modal.component.ts","../../../projects/shared/modal/src/modal/modal.component.html","../../../projects/shared/modal/src/modal-outlet/modal-outlet.component.ts","../../../projects/shared/modal/src/modal-outlet/modal-outlet.component.html","../../../projects/shared/modal/src/modal-content/modal-content.component.ts","../../../projects/shared/modal/src/modal-content/modal-content.component.html","../../../projects/shared/modal/ngx-templates-shared-modal.ts"],"sourcesContent":["import { WritableSignal } from '@angular/core';\nimport { List } from 'immutable';\nimport { Modal } from './types';\n\nexport class ModalController<T = void> {\n  private _resolver!: (v: T | undefined) => void;\n\n  constructor(\n    private _id: number,\n    private _modals: WritableSignal<List<Modal<unknown, unknown>>>,\n  ) {}\n\n  /**\n   * A `Promise` that is resolved when the target modal is closed.\n   */\n  closed = new Promise<T | undefined>((res) => {\n    this._resolver = res;\n  });\n\n  /**\n   * Close the target modal.\n   *\n   * @param result Provided response data\n   */\n  close(result?: T) {\n    this._resolver(result);\n\n    this._modals.update((modals) => {\n      const idx = modals.findIndex((m) => m.id === this._id);\n      return modals.remove(idx);\n    });\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Injectable, Type, signal } from '@angular/core';\nimport { ModalController } from './modal.controller';\nimport { List } from 'immutable';\nimport { Modal, ModalConfig } from './types';\n\nconst DEFAULT_CONFIG: ModalConfig = {\n  modalWindowUi: true,\n  animated: true,\n};\n\n@Injectable({ providedIn: 'root' })\nexport class ModalService {\n  private _modals = signal<List<Modal<any, any>>>(List([]));\n  private _ct = 0;\n\n  modals = this._modals.asReadonly();\n\n  /**\n   * Creates a modal by a provided content component.\n   *\n   * The first template type represents the input data, if any.\n   * The second one â€“ the response data, if any.\n   *\n   * @param component Modal content component\n   * @param data Data passed to the content\n   * @returns A modal controller\n   */\n  createModal<D = void, R = void>(\n    component: Type<unknown>,\n    data?: D,\n    config?: Partial<ModalConfig>,\n  ): ModalController<R> {\n    const controller = new ModalController<R>(this._ct, this._modals);\n    const modal: Modal<D, R> = {\n      component,\n      data,\n      controller,\n      id: this._ct,\n      config: { ...DEFAULT_CONFIG, ...config },\n    };\n    this._modals.update((m) => m.push(modal));\n\n    this._ct++;\n\n    return controller;\n  }\n\n  /**\n   * Closes currently opened modal on focus.\n   */\n  closeCurrent() {\n    if (this._modals().size) {\n      this._modals.update((modals) => modals.remove(modals.size - 1));\n    }\n  }\n\n  /**\n   * Close all opened modals.\n   */\n  closeAll() {\n    this._modals.set(List([]));\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  HostListener,\n  InjectionToken,\n  Injector,\n  StaticProvider,\n  ViewContainerRef,\n  inject,\n  input,\n  viewChild,\n} from '@angular/core';\nimport { ModalController } from '../modal.controller';\nimport { Modal } from '../types';\n\nexport const MODAL_DATA = new InjectionToken('MODAL_DATA');\n\n@Component({\n  selector: 'ngx-modal',\n  imports: [],\n  templateUrl: './modal.component.html',\n  styleUrl: './modal.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ModalComponent<D, R> implements AfterViewInit {\n  private _cdRef = inject(ChangeDetectorRef);\n\n  modal = input.required<Modal<D, R>>();\n  content = viewChild.required('content', { read: ViewContainerRef });\n\n  private _clickFlag = false;\n\n  /**\n   * Create the modal content component and insert it\n   * in the host view container.\n   */\n  ngAfterViewInit() {\n    const modal = this.modal();\n    const injector = this._createInjector(\n      modal.controller,\n      modal.data,\n      modal.config.injector,\n    );\n    this.content().createComponent(modal.component, { injector });\n\n    // We need to run a CD in order to avoid NG0100\n    this._cdRef.detectChanges();\n  }\n\n  /**\n   * Close the modal, if the overlay is clicked.\n   */\n  @HostListener('mousedown')\n  onHostMousedown() {\n    if (!this._clickFlag) {\n      this.modal().controller.close();\n    }\n    this._clickFlag = false;\n  }\n\n  onModalMousedown() {\n    this._clickFlag = true;\n  }\n\n  /**\n   * Create an injector that includes the modal controller and the modal data\n   * that are then passed to the modal content component for rendering and/or control.\n   */\n  private _createInjector(\n    modalCtrl: ModalController<R>,\n    data?: D,\n    parentInjector?: Injector,\n  ) {\n    const providers: StaticProvider[] = [\n      {\n        provide: MODAL_DATA,\n        useValue: data,\n      },\n      {\n        provide: ModalController,\n        useValue: modalCtrl,\n      },\n    ];\n\n    return Injector.create({\n      providers,\n      parent: parentInjector,\n    });\n  }\n}\n","<!-- eslint-disable-next-line -->\n<div\n  class=\"modal\"\n  [class.window-ui]=\"modal().config.modalWindowUi\"\n  [class.animated]=\"modal().config.animated\"\n  (mousedown)=\"onModalMousedown()\"\n>\n  <ng-container #content />\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  HostListener,\n  Renderer2,\n  effect,\n  inject,\n} from '@angular/core';\nimport { ModalService } from '../modal.service';\nimport { ModalComponent } from '../modal/modal.component';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'ngx-modal-outlet',\n  imports: [ModalComponent],\n  templateUrl: './modal-outlet.component.html',\n  styleUrl: './modal-outlet.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ModalOutletComponent {\n  private _doc = inject(DOCUMENT);\n  private _modalService = inject(ModalService);\n  private _renderer = inject(Renderer2);\n\n  modals = this._modalService.modals;\n\n  constructor() {\n    effect(() => {\n      const body = this._doc.body;\n\n      if (this.modals().size) {\n        this._renderer.setStyle(body, 'overflow', 'hidden');\n      } else {\n        this._renderer.setStyle(body, 'overflow', null);\n      }\n    });\n  }\n\n  @HostListener('document:keydown.escape')\n  closeCurrentVisibleModal() {\n    this._modalService.closeCurrent();\n  }\n}\n","@for (m of modals(); track m.id; let i = $index) {\n  <ngx-modal\n    [modal]=\"m\"\n    [style.visibility]=\"i === modals().size - 1 ? 'visible' : 'hidden'\"\n  />\n}\n","import { ChangeDetectionStrategy, Component, input } from '@angular/core';\nimport { IconComponent } from '@ngx-templates/shared/icon';\nimport { ModalController } from '../modal.controller';\n\n@Component({\n  selector: 'ngx-modal-content',\n  imports: [IconComponent],\n  templateUrl: './modal-content.component.html',\n  styleUrl: './modal-content.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ModalContentComponent<T> {\n  controller = input.required<ModalController<T>>();\n}\n","<p class=\"title\">\n  <span><ng-content select=\"[title]\" /></span>\n  <button (click)=\"controller().close()\">\n    <ngx-icon name=\"Close\" />\n  </button>\n</p>\n<div class=\"content\">\n  <ng-content select=\"[content]\" />\n</div>\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}